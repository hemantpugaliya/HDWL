section .data
number: db "it is a number"
alphabet: db "it is a alphabet"  
symbol: db "it is a symbol"
message: db "enter a keystroke"
msg_len: equ $-message
nextline: db 0Ah

section .bss
char: resb 1

section .txt

 global _start 
_start:

  mov eax,4
  mov ebx,1
  mov ecx,message
  mov edx,msg_len
  int 80h
 
  mov eax,4
  mov ebx,1
  mov ecx,nextline
  mov edx,1
  int 80h
  
  mov eax,3
  mov ebx,0
  mov ecx,char
  mov edx,1
  int 80h
  mov al,byte[char]
  
  
  cmp al,'0'
  jnb l1
  jmp l6
  
  l1:  cmp al,'9'
  jng l2
  jmp l6
  
  l2:
  mov eax,4
  mov ebx,1
  mov ecx,number
  mov edx,14
  int 80h
  jmp l3
  

  l6:  

  cmp al,41h
  jnb l4
  jmp l7
  
  l4: cmp al,5Ah
  jng l5
  jmp l7
  
  l5: mov eax,4
  mov ebx,1
  mov ecx,alphabet
  mov edx,16
  int 80h
  jmp l3
  
  l7: cmp al,61h
  jnb l8
  jmp l10
  
  l8: cmp al,7Ah
  jng l9
  jmp l10
 
  l9:mov eax,4
  mov ebx,1
  mov ecx,alphabet
  mov edx,16
  int 80h
  jmp l3
  
  l10:
  mov eax,4
  mov ebx,1
  mov ecx,symbol
  mov edx,14
  int 80h
  jmp l3
  
l3:  mov eax,1
  mov ebx,0
  int 80h



  
  
