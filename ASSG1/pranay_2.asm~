section .text
 global _start:
 
_start:

 
 mov eax,4
 mov ebx,1
 mov ecx,message
 mov edx,msg_len
 int 80h
 
 mov eax,4
 mov ebx,1
 mov ecx,newline
 mov edx,1
 int 80h
 
 read_num:

  pusha
  mov byte[num], 0
  
  read:
    mov eax, 3
    mov ebx, 0
    mov ecx, temp
    mov edx, 1
    int 80h
    
    cmp byte[temp], 10
      je end
    
    mov al, byte[num]
    mov bl, 10
    mul bl
    mov bl, byte[temp]
    sub bl, 30h
    add al, bl
    mov byte[num], al
    jmp read 
  end:
 mov eax,4
 mov ebx,1
 mov ecx,num
 mov edx,1
 int 80h
 popa
ret

 movzx ax,al
 mov bl,2
 div bl

 
 cmp ah,0
 je l1
 jmp l2
 
 l1: mov eax,4
 mov ebx,1
 mov ecx,even
mov edx,10
int 80h
jmp l3

l2:  mov eax,4
 mov ebx,1
 mov ecx,odd
 mov edx,9
 int 80h
 jmp l3
 
l3:mov eax,1
mov ebx,0
int 80h

section .data
even: db "it is even"
odd: db "it is odd"
message: db "enter a number"
msg_len: equ $-message
newline: db 0Ah

section .bss
num: resb 1
temp: resb 2

